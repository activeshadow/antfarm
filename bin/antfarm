#! /usr/bin/ruby
 
################################################################################
#                                                                              #
# Copyright (2008-2010) Sandia Corporation. Under the terms of Contract        #
# DE-AC04-94AL85000 with Sandia Corporation, the U.S. Government retains       #
# certain rights in this software.                                             #
#                                                                              #
# Permission is hereby granted, free of charge, to any person obtaining a copy #
# of this software and associated documentation files (the "Software"), to     #
# deal in the Software without restriction, including without limitation the   #
# rights to use, copy, modify, merge, publish, distribute, distribute with     #
# modifications, sublicense, and/or sell copies of the Software, and to permit #
# persons to whom the Software is furnished to do so, subject to the following #
# conditions:                                                                  #
#                                                                              #
# The above copyright notice and this permission notice shall be included in   #
# all copies or substantial portions of the Software.                          #
#                                                                              #
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR   #
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,     #
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE  #
# ABOVE COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, #
# WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR #
# IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE          #
# SOFTWARE.                                                                    #
#                                                                              #
# Except as contained in this notice, the name(s) of the above copyright       #
# holders shall not be used in advertising or otherwise to promote the sale,   #
# use or other dealings in this Software without prior written authorization.  #
#                                                                              #
################################################################################

$LOAD_PATH.unshift(File.dirname(__FILE__) + '/../lib')

SUB_COMMANDS = ['help', 'db', 'console', 'show']

def parse_options(defaults = {}, args = ARGV)
  defaults['environment'] ||= 'antfarm'
  defaults['log_level']   ||= 'warn'

  sub_commands = SUB_COMMANDS.collect { |s| "  #{s}" }
  plugins      = Array.new
  # TODO <scrapcoder>: figure out how to order these alphabetically...
  Antfarm::Plugin.discover { |p| plugins << "  #{p}" }

  return Trollop::options(args) do
    version 'ANTFARM 0.5.0 (c) Sandia National Laboratories'
    banner  <<-EOS

ANTFARM is a passive network mapping and data fusion application.
Please see the man page (`gem man antfarm`) for more information.
Please see the man page for ANTFARM plugins (`gem man antfarm-plugins`)
for more detailed information about each plugin available.

Available Subcommands:
#{sub_commands.join("\n")}

Available Plugins:
#{plugins.join("\n")}

Global Options:
    EOS
    opt     :env,       'Antfarm environment to use', :default => defaults['environment']
    opt     :log_level, 'Antfarm log level to use',   :default => defaults['log_level']
    # TODO <scrapcoder>: ugh... this is ugly
    stop_on sub_commands.collect { |s| s.strip } + plugins.collect { |p| p.strip }
  end
end

require 'rubygems'
require 'trollop'

begin
  require 'antfarm-core'
rescue LoadError
  # If the above require fails, then maybe we're not using gems so let's assume
  # the core library is in the same directory as this application and try to
  # load it again.
  $LOAD_PATH.unshift(File.dirname(__FILE__) + '/../../antfarm-core/lib')
  require 'antfarm-core'
end

Antfarm::Helpers.outputter = STDOUT

require 'yaml'
defaults = YAML::load(IO.read(Antfarm::Helpers.defaults_file))

require 'antfarm/cli'

options = parse_options(defaults)

ENV['ANTFARM_ENV']       = options[:env]
ENV['ANTFARM_LOG_LEVEL'] = options[:log_level]

require "#{ANTFARM_ROOT}/config/environment"

framework = Antfarm::CLI::Framework.new

begin
  arg = ARGV.shift
  case arg
  when 'help'
    if ARGV.empty?
      parse_options defaults, ['-h']
    elsif ARGV.first == 'db'
      framework.db ['-h']
    elsif ARGV.first == 'console'
      framework.console ['-h']
    elsif ARGV.first == 'show'
      framework.show ['-h']
    else
      framework.use ARGV.shift
      framework.show_info
      framework.show_options
    end
  when 'db'
    framework.db ARGV
  when 'console'
    framework.console
  when 'show'
    framework.show
  when nil
    parse_options defaults, ['-h']
  else
    framework.use arg
    options = Trollop::options do
      banner <<-EOS

Plugin - #{framework.plugin.info[:name]} (#{framework.plugin.name})
#{framework.plugin.info[:author]}

#{framework.plugin.info[:desc]}

Options:
      EOS
      framework.plugin.options.each do |option|
        name = option.delete(:name)
        desc = option.delete(:desc)
        opt name, desc, option
      end
    end
    framework.run options
  end
rescue => err
# puts err
# parse_options defaults, ['-h']
end
